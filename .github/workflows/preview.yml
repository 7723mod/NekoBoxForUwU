name: Preview Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    
jobs:
  libcore:
    name: Native Build (LibCore)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Golang Status
        run: find buildScript libcore/*.sh | xargs cat | sha1sum > golang_status
      - name: Libcore Status
        run: git ls-files libcore | xargs cat | sha1sum > libcore_status
      - name: LibCore Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'golang_status', 'libcore_status') }}
          restore-keys: |
            ${{ hashFiles('.github/workflows/*', 'golang_status') }}-
      - name: Install Golang
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-go@v5
        with:
          go-version: '^1.25'
      - name: Native Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: ./run lib core
  
  build:
    name: Build OSS APK
    runs-on: ubuntu-latest
    needs:
      - libcore
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Golang Status
        run: find buildScript libcore/*.sh | xargs cat | sha1sum > golang_status
      - name: Libcore Status
        run: git ls-files libcore | xargs cat | sha1sum > libcore_status
      - name: LibCore Cache
        uses: actions/cache@v4
        with:
          path: app/libs/libcore.aar
          key: ${{ hashFiles('.github/workflows/*', 'golang_status', 'libcore_status') }}
          restore-keys: |
            ${{ hashFiles('.github/workflows/*', 'golang_status') }}-
      - name: Gradle cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle
          key: gradle-oss-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            gradle-oss-
      - name: Gradle Build
        env:
          BUILD_PLUGIN: none
        run: |
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          echo "ndk.dir=${ANDROID_HOME}/ndk/25.0.8775105" >> local.properties
          echo "${{ secrets.LOCAL_PROPERTIES }}" >> local.properties
          
          ./run init action gradle
          ./gradlew app:assemblePreviewRelease
          
          APK_PATH=$(find app/build/outputs/apk -name '*arm64-v8a*.apk')
          APK_DIR=$(dirname $APK_PATH)
          echo "APK_DIR=$APK_DIR" >> $GITHUB_ENV
          
      - uses: actions/upload-artifact@v4
        with:
          name: APKs
          path: ${{ env.APK_DIR }}